#name of the workflow
name: Java-maven2
on: 
  workflow_dispatch:
    inputs:
      Test:
        description: 'Test report'
        type: choice
        #required: true
        #default: 'true'
        options: 
        - 'true'
        - 'false'
      Artifact:
        description: 'Publish artifacts'
        type: choice
        #required: true
        #default: 'true'
        options: 
        - 'true'
        - 'false'
      SAST-Snyk:
        description: 'SAST-Snyk test'
        type: choice
        #required: true
        #default: 'true'
        options: 
        - 'true'
        - 'false'   
      SonarCloud-scan:
        description: 'SonarCloud-scan test'
        type: choice
        #required: true
        #default: 'true'
        options: 
        - 'true'
        - 'false' 


jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2   

    - name: Build project with Maven
      run: mvn -B package --file pom.xml -DskipTests 
  
  Test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [Build]
    if: github.event.inputs.Test == 'true'  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      #- name: Build and Run Tests
        #run: mvn test --batch-mode --fail-at-end
      - run: mvn -B package --file pom.xml -DskipTests 
      - run: mvn install -DskipTests
      - run: mvn clean test --batch-mode -Dmaven.test.failure.ignore=true
      
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/surefire-reports/TEST-*.xml' 
  
  Artifact:
      #if: github.event.inputs.Artifact == 'true'  
      runs-on: ubuntu-latest
      needs: [Test]
      if: |
        (github.event.inputs.Artifact == 'true' ) && 
        (!cancelled()) &&
        (needs.Test.result == 'success' || needs.Test.result == 'skipped')
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 14
        - run: mvn -B package --file pom.xml -DskipTests
        - uses: josStorer/get-current-time@v2
          id: current-time
          with:
            format: YYYYMMDD-HH
            utcOffset: "+08:00"
        - name: Use current time    
          env:
              TIME: "${{ steps.current-time.outputs.time }}"
              R_TIME: "${{ steps.current-time.outputs.readableTime }}"
              F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
              YEAR: "${{ steps.current-time.outputs.year }}"
              DAY: "${{ steps.current-time.outputs.day }}"
          run: echo $TIME $R_TIME $F_TIME $YEAR $DAY
        - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
        - uses: actions/upload-artifact@v1
          with:
            name: Package-${{ steps.current-time.outputs.formattedTime }}
            path: staging    
            
  #Refer for container: https://medium.com/@alexander.volminger/ci-cd-for-java-maven-using-github-actions-d009a7cb4b8f
  
  SAST-Snyk:
    #if: github.event.inputs.SAST-Snyk == 'true' && (needs.Artifact.result == 'success' || needs.Artifact.result == 'skipped') && (needs.Test.result == 'success' || needs.Test.result == 'skipped')
    runs-on: ubuntu-latest
    needs: [Artifact,Test]
    if: |
      (github.event.inputs.SAST-Snyk == 'true') && 
      (!cancelled()) &&
      ((needs.Artifact.result == 'success' || needs.Artifact.result == 'skipped') ||
      (needs.Test.result == 'success' || needs.Test.result == 'skipped'))
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif    


    
  SonarCloud-scan:
    #if: github.event.inputs.SonarCloud-scan == 'true' && (needs.Artifact.result == 'success' || needs.Artifact.result == 'skipped') && (needs.SAST-Snyk.result == 'success' || needs.SAST-Snyk.result == 'skipped') && (needs.Test.result == 'success' || needs.Test.result == 'skipped') && (needs.SAST-Snyk.result == 'success' || needs.SAST-Snyk.result == 'skipped')
    runs-on: ubuntu-latest
    needs: [SAST-Snyk,Artifact,Test]
    if: |
      (github.event.inputs.SonarCloud-scan == 'true' ) && 
      (!cancelled()) &&
      ((needs.Artifact.result == 'success' || needs.Artifact.result == 'skipped') || 
      (needs.SAST-Snyk.result == 'success' || needs.SAST-Snyk.result == 'skipped') ||
      (needs.Test.result == 'success' || needs.Test.result == 'skipped'))
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud-Scan
      #uses: sonarsource/sonarcloud-github-action@master
      run:  mvn install -DskipTests sonar:sonar -Dsonar.projectKey=hegdeshashi_github-action-java -Dsonar.organization=gh-action-java -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
